#Setup Visore
PROJECT(AutoVet)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC") #fPIC for Qt
CMAKE_POLICY(SET CMP0012 NEW) #Ensures that TRUE can be used as a boolean

#Setup directory paths
SET(ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(ENGINE ${ROOT}/engine)
SET(MAIN ${ROOT}/main)

#Setup CMake
SET(CMAKE_MODULE_PATH ${ROOT}/cmake)
INCLUDE(Version)
INCLUDE(Macros)

#Set System
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	SET(MACOSX 1)
	ADD_DEFINITIONS(-DMACOSX)
	SET(SYSTEM "MACOSX" CACHE INTERNAL "Current system")
    SET(DISTRO " " CACHE INTERNAL "Linux distrobution")    
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	ADD_DEFINITIONS(-DLINUX)
	SET(SYSTEM "LINUX" CACHE INTERNAL "Current system")
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	ADD_DEFINITIONS(-DWINDOWS)
	SET(SYSTEM "WINDOWS" CACHE INTERNAL "Current system")
    SET(DISTRO " " CACHE INTERNAL "Linux distrobution")
ENDIF()

#Setup Qt5
SET(CMAKE_AUTOMOC ON)
SET(QT5_DIR "/usr/local/Qt-5.0.0" CACHE PATH "Qt5 install location (containing the bin, include and lib directories - eg: /usr/local/Qt-5.0.0)")
SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${QT5_DIR})
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Gui REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5Sql REQUIRED)
FIND_PACKAGE(Qt5Network REQUIRED)

INCLUDE_DIRECTORIES(${Qt5Sql_INCLUDE_DIRS} ) # for QSqlDatabase

#Include common headers
HEADER_DIRECTORIES(GLOBAL_HEADERS)
INCLUDE_DIRECTORIES(${GLOBAL_HEADERS})

#Initiate sub-directories
ADD_SUBDIRECTORY(${ENGINE})
ADD_SUBDIRECTORY(${MAIN})
